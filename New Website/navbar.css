@charset "utf-8";
/* CSS Document */

/* ####################   Navigation bar CSS styling   ################## */ 

.mynavbar {
	position: relative;
	width: 100%;
 	height: 25px; /* corresponds to 'line-height' of a.navbartitle below */
	margin: 0; border: 0; padding: 0;
	background-image: url(images/links_repeat.png);
	background-repeat: repeat-x;
	z-index: 51;
}


a.navbartitle {
	display: block;
	float: left;
	color: #333;
	background: url(images/links.png) 0 0;
	background-repeat: repeat-x;
	font-family: Verdana, Arial, Geneva,  Helvetica, sans-serif;
	font-size: 12px;
	margin: 0;
	border: 0;
	padding: 0;
	line-height: 25px; /* corresponds to 'top' value of .submenu below */
	text-align: center;
	text-decoration:none;	
}
a.navbartitle:hover {
  background: url(images/links.png) 0 -25px;
  background-repeat: repeat-x;
}
/* menu title widths */
#home { width: 70px; }
#currentsymposium { width: 145px; }
#registration { width: 110px; }
#volunteer { width: 100px; }
#judge { width: 80px; }
#faq { width: 60px; }
#aboutus { width: 90px; }
#contact { width: 90px; }
/* We just specify a fixed width for each menu title. Then, down below we specify
    a fixed left position for the corresponding submenus.
    Using these fixed values isn't as elegant as just letting the text of each 
    menu title determine the width of the menu titles and position of the submenus,
    but we found this hardwired approach resulted in fewer cross-browser/cross-OS 
    formatting glitches -- and it's pretty easy to adjust these title widths and the
    corresponding submenu 'left' positions below, just by eyeballing them whenever
    we need to change the navbar menu titles (which isn't often). */

.submenu {
	position:absolute;
	z-index: 2;
	top: 25px; /* corresponds to line-height of a.navbartitle above */
	padding: 0;
	margin: 0;
	width:166px; /* If adjust this, then adjust width of .submenu below a too */
	color: #333;
	background-color:  #999999;
	border: 1px solid #447755; /* box around entire sub-menu */
	font-family: Verdana, Arial, Geneva,  Helvetica, sans-serif;
	font-size: 11px;
}
/* Fix IE formatting quirks. */
* html .submenu { width: 148px; } /* IE needs narrower than width of .submenu above */
/* End */

/* position of each sub menu */
/* We just eyeball the position of each submenu here -- can move left or right as needed. 
   If you adjust menu title text, you might want to adjust these too. */
#aboutus_submenu {  left: 565px; visibility: hidden; }
/* Note, each submenu is hidden when the page loads - then made visible when
    the mouse goes over the menu title. Using the 'visibility' property instead
    of using the 'display' property avoided a bug in some versions of Safari. 
    (The bug is pretty where esoteric: The browser ignored the 'hover' property 
    on 'li' objects inside an object whose display property was set to 'none' 
    when the page loaded...) Using the 'visibility' property instead of 'display'
    would normaly take up extra room on the page, but that's avoided here by putting
    the submenu on a second layer: see 'position: absolute' and 'z-index: 2'
    in .submenu definition, higher up this page. */

.submenu a
{
	display: block;
	color: #eee;
	background-color: #666666;
	width: 146px; /* This should be width of .submenu above minus right-side padding on next line */
	padding: 5px 0px 4px 20px;
	text-decoration: none;
	border-bottom: #c4cefc dotted 1px;
	border-top: 0;
	border-left: 0;
	border-right: 0;
}


ul { position: relative; display: block; }
li { position: relative; display: block; }

.submenubox { 
  margin: 0; padding: 0; border: 0;
}
.submenubox ul
{
  margin: 0; padding: 0; border: 0;
  list-style-type: none;
}

.submenubox ul li { 
  margin: 0; padding: 0; border: 0;
}

.submenubox ul li a:link { }
.submenubox ul li a:visited { }
.submenubox ul li a:hover
{
	color: #c6e8e2; /* text color for submenu items */
	background-color: #333333;
	border-bottom: #CCCCCC dotted 1px;
}